{"version":3,"sources":["utils.js","Search.js","Nation.js","NationList.js","Buttons.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["paginate","nations","numberOfPages","Math","ceil","length","Array","from","_","index","start","slice","Search","setSearchTerm","handleDownClick","handleUpClick","curtPgNation","nationValue","useRef","className","onSubmit","e","preventDefault","htmlFor","type","name","id","ref","onChange","current","value","onClick","disabled","Nation","flag","alpha2Code","alpha3Code","nativeName","altSpellings","callingCodes","handleModal","src","alt","map","altSpelling","NationList","loading","item","Buttons","setPage","pageNations","page","oldPage","prevPage","pageNation","handlePage","nextPage","console","log","Modal","modalData","isModalOpen","closeModal","App","useState","setLoading","setNations","setPageNations","searchterm","setCurtPgNation","setModalData","setIsModalOpen","fetchNations","a","urlFetch","fetch","response","json","data","useEffect","sort","b","nameA","toUpperCase","nameB","searchName","filter","nation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb4894c5.chunk.js","sourcesContent":["const paginate = (nations) => {\r\n  const itemsPerPage = 25;\r\n  const numberOfPages = Math.ceil(nations.length / itemsPerPage);\r\n\r\n  const newNations = Array.from({ length: numberOfPages }, (_, index) => {\r\n    const start = index * itemsPerPage;\r\n    return nations.slice(start, start + itemsPerPage);\r\n  });\r\n  return newNations;\r\n};\r\n\r\nexport default paginate;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Search = ({\r\n  setSearchTerm,\r\n  handleDownClick,\r\n  handleUpClick,\r\n  curtPgNation,\r\n}) => {\r\n  const nationValue = useRef(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n  const filterNation = () => {\r\n    setSearchTerm(nationValue.current.value);\r\n  };\r\n\r\n  return (\r\n    <section className=\"section search\">\r\n      <form className=\"search-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">search your nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            ref={nationValue}\r\n            onChange={filterNation}\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className=\"btn-container\">\r\n        <button\r\n          className=\"search-btn\"\r\n          onClick={handleUpClick}\r\n          disabled={!curtPgNation}\r\n        >\r\n          正序\r\n        </button>\r\n\r\n        <button\r\n          className=\"page-btn\"\r\n          onClick={handleDownClick}\r\n          disabled={!curtPgNation}\r\n        >\r\n          反序\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Nation = ({\r\n  flag,\r\n  name,\r\n  alpha2Code,\r\n  alpha3Code,\r\n  nativeName,\r\n  altSpellings,\r\n  callingCodes,\r\n  handleModal,\r\n}) => {\r\n  // const str={altSpellings}.split()\r\n  return (\r\n    <article className=\"nation-container\">\r\n      <img src={flag} alt={name} className=\"img-container\" />\r\n      <div className=\"nation-footer\">\r\n        <header>\r\n          <h6 onClick={() => handleModal({ name })}>國家名稱:{name}</h6>\r\n          {/* <h4>國際電話區號{callingCodes}</h4> */}\r\n        </header>\r\n        <h6>母語名稱:{nativeName}</h6>\r\n        <h6>國際電話區:{callingCodes}</h6>{\" \"}\r\n        <header>\r\n          <h6>國家代碼:{alpha2Code}(2位)</h6>\r\n          <h6>{alpha3Code}(3位)</h6>{\" \"}\r\n        </header>\r\n        <h6>替代國家名稱:</h6>\r\n        {altSpellings.map((altSpelling) => {\r\n          return <h6>{altSpelling}</h6>;\r\n        })}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\nexport default Nation;\r\n","import React from \"react\";\r\nimport Nation from \"./Nation\";\r\n\r\nconst NationList = ({ loading, curtPgNation, handleModal }) => {\r\n  if (loading) {\r\n    return <p>Loading</p>;\r\n  } else if (!curtPgNation) {\r\n    return <p>沒有找到國家</p>;\r\n  }\r\n  return (\r\n    <div className=\"list-container\">\r\n      {!loading &&\r\n        curtPgNation.map((item, index) => {\r\n          return <Nation key={index} {...item} handleModal={handleModal} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\nexport default NationList;\r\n","import React from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\nconst Buttons = ({ loading, setPage, pageNations, page }) => {\r\n  const nextPage = () => {\r\n    setPage((oldPage) => {\r\n      let nextPage = oldPage + 1;\r\n      if (nextPage > pageNations.length - 1) {\r\n        nextPage = 0;\r\n      }\r\n      return nextPage;\r\n    });\r\n    console.log(\"ButtonsPage\", page);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    setPage((oldPage) => {\r\n      let prevPage = oldPage - 1;\r\n      if (prevPage < 0) {\r\n        prevPage = pageNations.length - 1;\r\n      }\r\n      return prevPage;\r\n    });\r\n  };\r\n\r\n  const handlePage = (index) => {\r\n    setPage(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <div className=\"btn-container\">\r\n          <button type=\"button\" className=\"prev-btn\" onClick={prevPage}>\r\n            <FaChevronLeft />\r\n          </button>\r\n          {pageNations.map((pageNation, index) => {\r\n            return (\r\n              <button\r\n                key={index + 1}\r\n                className={`${\r\n                  index == page ? \"page-btn page-active\" : \"page-btn\"\r\n                }`}\r\n                onClick={() => handlePage(index)}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            );\r\n          })}\r\n          <button type=\"button\" className=\"next-btn\" onClick={nextPage}>\r\n            <FaChevronRight />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nconst Modal = ({ modalData, isModalOpen, closeModal }) => {\r\n  //   const [\r\n  //     topLevelDomain,\r\n  //     capital,\r\n  //     region,\r\n  //     subregion,\r\n  //     population,\r\n  //     latlng,\r\n  //     demonym,\r\n  //     area,\r\n  //     gini,\r\n  //     timezones,\r\n  //     borders,\r\n  //     numericCode,\r\n  //     currencies,\r\n  //     languages,\r\n  //     translations,\r\n  //     regionalBlocs,\r\n  //     cioc,\r\n  //   ] = [...modalData];\r\n  //   const ak = [...modalData];\r\n  return (\r\n    <div\r\n      className={`${\r\n        isModalOpen ? \"modal-overlay show-modal\" : \"modal-overlay\"\r\n      }`}\r\n    >\r\n      <div className=\"modal-container\">\r\n        <h3>modal content </h3>\r\n        <button className=\"close-modal-btn\" onClick={closeModal}>\r\n          <FaTimes></FaTimes>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Search from \"./Search\";\nimport NationList from \"./NationList\";\nimport Buttons from \"./Buttons\";\nimport Modal from \"./Modal\";\nimport paginate from \"./utils\";\nimport \"./App.css\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const url = \"https://restcountries.eu/rest/v2/name/\";\n  const urlBk = \"https://restcountries.eu/rest/v2/all\";\n  const [nations, setNations] = useState([]);\n  const [pageNations, setPageNations] = useState([]);\n\n  const [searchterm, setSearchTerm] = useState(\"a\");\n  const [page, setPage] = useState(0);\n  const [curtPgNation, setCurtPgNation] = useState([]);\n  const [modalData, setModalData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleDownClick = () => {\n    if (nations) {\n      setLoading(true);\n      nations.sort(function (a, b) {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA < nameB) {\n          return 1;\n        }\n        if (nameA > nameB) {\n          return -1;\n        }\n        return 0;\n      });\n      setLoading(false);\n    }\n\n    console.log(\"nations\", nations);\n    setPageNations(paginate(nations));\n    setPage(0);\n  };\n\n  const handleUpClick = () => {\n    if (nations) {\n      setLoading(true);\n      nations.sort(function (a, b) {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      setLoading(false);\n    }\n\n    setPageNations(paginate(nations));\n\n    setPage(0);\n  };\n\n  const handleModal = (searchName) => {\n    // const result = nations.filter((nation) => nation.name == searchName.name);\n    setModalData(() => {\n      const result = nations.filter((nation) => nation.name == searchName.name);\n      return result;\n    });\n    setIsModalOpen(true);\n    console.log(\"resutl\", modalData);\n  };\n\n  const fetchNations = async () => {\n    setLoading(true);\n    try {\n      const urlFetch = searchterm ? url : urlBk;\n\n      const response = await fetch(`${urlFetch}${searchterm}`);\n      const data = await response.json();\n\n      console.log(\"data\", data);\n      setNations(data);\n      setPageNations(paginate(data));\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchNations();\n  }, [searchterm]);\n\n  // useEffect(() => {\n  //   console.log(\"appnations\", nations);\n  //   setPageNations(paginate(nations));\n  //   console.log(\"apppageNations\", pageNations);\n  //   setPage(0);\n  //   setCurtPgNation(pageNations[page]);\n  // }, [nations]);\n\n  // useEffect(() => {\n  //   setLoading(loading);\n  // }, [loading]);\n\n  useEffect(() => {\n    setCurtPgNation(pageNations[page]);\n    console.log(\"curtPgNationapp\", curtPgNation);\n  }, [loading, page, pageNations]);\n  return (\n    <>\n      <Search\n        setSearchTerm={setSearchTerm}\n        handleDownClick={handleDownClick}\n        handleUpClick={handleUpClick}\n        curtPgNation={curtPgNation}\n      />\n      <NationList\n        loading={loading}\n        curtPgNation={curtPgNation}\n        handleModal={handleModal}\n      />\n      <Modal\n        modalData={modalData}\n        isModalOpen={isModalOpen}\n        closeModal={closeModal}\n      />\n      <Buttons\n        loading={loading}\n        setPage={setPage}\n        pageNations={pageNations}\n        page={page}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}